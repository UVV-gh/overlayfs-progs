mkfs.overlay
============

mkfs.overlay is used to create an overlay filesystem on-disk format v2 in the
underlying directories on base filesystme.

This program init feature sets to each layer's root directory with "trusted.
overlay.feature" xattr valued to the feature bit mask, and could only be used
for create filesystem on new directories.

This program will refuse to make filesystem if one of the following match:

1) The "work" or "index" directory exists in workdir.
2) Whiteout or overlayfs related xattrs in the underlying layers.
3) Feature sets exists on the layer's root directory.
4) Any one of the underlying layers is mounted.

The first three items mean the underlying directories which user want to make
a overlay-filesystem has already been mounted by another overlayfs, it may
contian objects created by overlayfs, overwrite them directly to create a new
one may lead to inconsistency, so mkfs.overlay will refuse to make and advise
to use fsck.overlay.

Note that running mkfs.overlay is required when user want to mount a new
overlayfs which on-disk format v2 enforcement mount/module options was enabled.
Otherwise, mkfs.overlay is not necessary but recommended.

Usage
-----

1. Ensure the underlying directories haven't been or isn't being mounted which
   need to make a new overlay-filesystem.

2. Run mkfs.overlay program:
   Usage:
   fsck.overlay [-o lowerdir=<lowers>,upperdir=<upper>,workdir=<work>]
                [-o features[,...]][-vV]

   Options:
   -o,                       specify underlying directories of overlayfs and
                             overlay filesystem features, multiple lower
                             directories use ':' as separator
   -v, --verbose             print more messages of overlayfs
   -V, --version             display version information

   Example:
   mkfs.overlay -o lowerdir=lower,upperdir=upper,workdir=work

Features
--------

The filesystem feature set is comprised of a list of features, separated by
commas or each -o option. To enable or disable a feature, specify the feature
name equal to "on" or "off" (e.g. redirect_dir=on to enable redirect dir
feature).

Three feature are supported:
1. Redirect dir
   The underlying layer will contain directories which have redirect dir xattr.
2. Index
   An index directory will be created in workdir to map lower linked inodes to
   upper inodes.
3. nfs export
   Base on index feature, an index inode will be created on copy up of every
   file and directory, and may also contain whiteout when an index inode is
   removed.

fsck.overlay
============

fsck.overlay is used to check and optionally repair underlying directories
of overlay-filesystem.

Check the following points:

1. Whiteouts

A whiteout is a character device with 0/0 device number. It is used to record
the removed files or directories, When a whiteout is found in a directory,
there should be at least one directory or file with the same name in any of the
corresponding lower layers. If not exist, the whiteout will be treated as orphan
whiteout and remove.

2. Redirect directories

An redirect directory is a directory with "trusted.overlay.redirect" xattr
valued to the path of the original location from the root of the overlay. It
is only used when renaming a directory and "redirect dir" feature is enabled.
If an redirect directory is found, the following must be met:

1) The directory path pointed by redirect xattr should exist in one of lower
   layers.
2) There must be something with the same name to the rename origin in upper
   layer covering the lower target, could be a whiteout or a generic file,
   could be an opaque directory or another redirect direcotry but not a merge
   directory.
3) The origin directory should be redirected by only once, which means this
   origin directory should be redirected by an unique directory in all layers.

If not,
1) The redirect xattr is invalid and should remove.
2) If nothing covering the redirect origin target, fix the missing whiteout.
   If the redirect origin is covered by a generic directory, it becomes a
   subcase of duplicate redirect directory (redirect direcotry duplicate with
   an existing merge directory). Not sure the origin is a merge directory or
   a redirected directory, so there are two options can fix this inconsistency:
   a) remove the redirect xattr fsck found, or b) set opaque to the covering
   directory. Ask user by default or warn in auto mode.
3) Record redirect xattrs but not sure which one is invalid, ask user by
   default and warn in auto mode.

3. Impure directories

An impure directory is a directory with "trusted.overlay.impure" xattr valued
'y', which indicate that this directory may contain copied up targets from lower
layers.
If a target copy-up from lower to upper layer, it's 'd_ino' (see getdents(2))
will change from lower's 'd_ino' to upper's (a new inode will be created in
upper layer). So the impure xattr should be set to the parent directory to
prompt overlay filesystem to get and return the origin 'd_ino', thus ensuring
the consistentcy of 'd_ino'.

There are three situations of setting impure xattr in overlay filesystem:
1) Copy-up lower target in a directory.
2) Link an origin target (already copied up, have origin xattr) into a
   directory.
3) Rename an origin target (include merge subdirectories) into a new
   directory.

So, the impure xattr should be set if a direcotry contains origin targets or
redirect/merge subdirectories. If not, fix the impure xattr.

Feature sets
------------

Feature set is a "trusted.overlay.feature" xattr on each underlying layer's
root directory, valued to feature bitset, which indicate the features this layer
was enabled, include backward compatible, read-only compatible and incompatible
these three kinds of features, fsck program will refuse to check if unknown
features were found in the feature set.

The layer which have feature set xattr is on-disk format v2, and the layer
doesn't have is on-disk format v1. Fsck program will detect features each
underlying layer contains and then ask user to create or fix the feature set
xattr, which means change on-disk format v1 to v2.

Note that set feature set xattr to each underlying layer is optional, if user
want to mount overlayfs with on-disk format v2 enforcement mount/module options
("overlayfs_v2=<on/upper>" and "CONFIG_OVERLAY_[UPPER]_V2=y") after fsck, the
counterpart fsck options (the same as mount options) must be specified when
running fsck.overlay, it will force to fix inconsistent feature set xattr.

Usage
-----

1. Ensure overlay filesystem is not mounted based on directories which need to
   check.

2. Run fsck.overlay program:
   Usage:
   fsck.overlay [-o lowerdir=<lowers>,upperdir=<upper>,workdir=<work>]
                [-o options[,...]][-pnyvhV]

   Options:
   -o,                       specify underlying directories of overlayfs and
                             fs check options, multiple lower directories
                             use ':' as separator
   -p,                       automatic repair (no questions)
   -n,                       make no changes to the filesystem
   -y,                       assume "yes" to all questions
   -h,                       display the features information on each layer
   -v, --verbose             print more messages of overlayfs
   -V, --version             display version information

   Example:
   fsck.overlay -o lowerdir=lower,upperdir=upper,workdir=work

3. Exit value:
   0      No errors
   1      Filesystem errors corrected
   2      System should be rebooted
   4      Filesystem errors left uncorrected
   8      Operational error
   16     Usage or syntax error
   32     Checking canceled by user request
   128    Shared-library error

4. Options

- ovelrayfs_v2=<on/upper/off>

  This option the same as overlayfs mount options, but the effects are different.
  If say "off", fsck will ask user to create feature set when the input layer is
  on-disk format v1, and ask user to fix feature set when the feature set lose
  some feaures, but these two actions are not necessary, doesn't create or fix
  is also fine. One excetpion, if the feature set exists but was corrupted, fsck
  shall fix it.
  If say "on", the feature xattr becomes necessary on all layers. The underlying
  layer is inconsistent if the feature set xattr doesn't exist, is corrupted or
  lose some features, fsck shall fix all these three cases.
  If say "upper", release the requirement of the lower layers, the upper laayer
  should be consistent on-disk format v2, and the lowers can by either format v1
  or v2.

Note
----

1. It is strongly recommend to run this program after modifing underlying
   directories while overlay filesystem is offline.
2. Enough file descriptors (more than the number of specified underlying
   directories) are required to run this program.

No Support
----------

Current version cannot support overlayfs which was mounted with new
features introduced in Linux kernel >= 4.13, include index, nfs_export
and other upcoming features. Checking overlayfs which has these features
may lead to inconsistency.


Contributions
=============

Like the Linux kernel, contributions to overlayfs-progs are very welcome.
Please send patches to the author and CC linux-unionfs mail list at
linux-unionfs@vger.kernel.org
